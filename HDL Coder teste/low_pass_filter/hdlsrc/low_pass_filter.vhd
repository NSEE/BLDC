-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\low_pass_filter.vhd
-- Created: 2014-07-16 14:11:36
-- 
-- Generated by MATLAB 8.0 and HDL Coder 3.1
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-07
-- Target subsystem base rate: 1e-07
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.001
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- Out1                          ce_out        0.001
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: low_pass_filter
-- Source Path: low_pass_filter
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY low_pass_filter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        In1_10MHz                         :   IN    real;  -- double
        ce_out                            :   OUT   std_logic;
        Out1                              :   OUT   real  -- double
        );
END low_pass_filter;


ARCHITECTURE rtl OF low_pass_filter IS

  -- Component Declarations
  COMPONENT low_pass_filter_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb_1_10000_0                   :   OUT   std_logic;
          enb_1_10000_1                   :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : low_pass_filter_tc
    USE ENTITY work.low_pass_filter_tc(rtl);

  -- Signals
  SIGNAL enb_1_10000_1                    : std_logic;
  SIGNAL enb_1_10000_0                    : std_logic;
  SIGNAL Rate_Transition_bypass_reg       : real := 0.0;  -- double
  SIGNAL Rate_Transition_out1             : real := 0.0;  -- double
  SIGNAL s_state_out1                     : real := 0.0;  -- double
  SIGNAL s_denom_gain1                    : real := 0.0;  -- double
  SIGNAL s_denom_acc_out1                 : real := 0.0;  -- double
  SIGNAL s_nume_gain1                     : real := 0.0;  -- double

BEGIN
  u_low_pass_filter_tc : low_pass_filter_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb_1_10000_0 => enb_1_10000_0,
              enb_1_10000_1 => enb_1_10000_1
              );

  Rate_Transition_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Rate_Transition_bypass_reg <= 0.0;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_10000_1 = '1' THEN
        Rate_Transition_bypass_reg <= In1_10MHz;
      END IF;
    END IF;
  END PROCESS Rate_Transition_bypass_process;

  
  Rate_Transition_out1 <= In1_10MHz WHEN enb_1_10000_1 = '1' ELSE
      Rate_Transition_bypass_reg;

  s_denom_gain1 <= (-0.68592216593416622) * s_state_out1;

  s_denom_acc_out1 <= Rate_Transition_out1 - s_denom_gain1;

  s_state_out1_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      s_state_out1 <= 0.0;
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_10000_0 = '1' THEN
        s_state_out1 <= s_denom_acc_out1;
      END IF;
    END IF;
  END PROCESS s_state_out1_1_process;


  s_nume_gain1 <= 0.31407783406583367 * s_state_out1;

  ce_out <= enb_1_10000_1;

  Out1 <= s_nume_gain1;

END rtl;

