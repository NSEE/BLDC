-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\low_pass_filter_tc.vhd
-- Created: 2014-07-16 14:11:36
-- 
-- Generated by MATLAB 8.0 and HDL Coder 3.1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: low_pass_filter_tc
-- Source Path: low_pass_filter_tc
-- Hierarchy Level: 1
-- 
-- Master clock enable input: clk_enable
-- 
-- enb_1_10000_0: 10000x slower than clk_enable with last phase
-- enb_1_10000_1: 10000x slower than clk_enable with phase 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY low_pass_filter_tc IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enb_1_10000_0                     :   OUT   std_logic;
        enb_1_10000_1                     :   OUT   std_logic
        );
END low_pass_filter_tc;


ARCHITECTURE rtl OF low_pass_filter_tc IS

  -- Signals
  SIGNAL count10000                       : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL phase_0                          : std_logic;
  SIGNAL phase_0_tmp                      : std_logic;
  SIGNAL phase_1                          : std_logic;
  SIGNAL phase_1_tmp                      : std_logic;

BEGIN
  Counter10000 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      count10000 <= to_unsigned(1, 14);
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        IF count10000 = to_unsigned(9999, 14) THEN
          count10000 <= to_unsigned(0, 14);
        ELSE
          count10000 <= count10000 + 1;
        END IF;
      END IF;
    END IF; 
  END PROCESS Counter10000;

  temp_process1 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_0 <= '0';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_0 <= phase_0_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  phase_0_tmp <= '1' WHEN count10000 = to_unsigned(9999, 14) AND clk_enable = '1' ELSE '0';

  temp_process2 : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      phase_1 <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        phase_1 <= phase_1_tmp;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  phase_1_tmp <= '1' WHEN count10000 = to_unsigned(0, 14) AND clk_enable = '1' ELSE '0';

  enb_1_10000_0 <=  phase_0 AND clk_enable;

  enb_1_10000_1 <=  phase_1 AND clk_enable;


END rtl;

